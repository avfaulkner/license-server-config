---
# Update the OSs and reboot them
- name: Update the OS
  package:
    name: "*"
    state: latest

- name: Is a reboot required? (CentOS)
  shell: needs-restarting -r
  register: restart
  when: ansible_distribution == "CentOS"
  failed_when: restart.rc > 1
- debug: var=restart.rc

- name: Is a reboot required? (Ubuntu)
  stat:
    path: /var/run/reboot-required
  register: restart
  when: ansible_distribution == "Ubuntu"
- debug: var=restart.rc

- name: Reboot immediately if there was a change (CentOS).
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  when:
    - ansible_distribution == "CentOS"
    - restart.rc == 1

- name: Reboot immediately if there was a change (Ubuntu).
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  when:
    - ansible_distribution == "Ubuntu"
    - restart.stat.exists == true

- name: Wait for the reboot to complete if there was a change.
  wait_for_connection:
    connect_timeout: 1 # Maximum number of seconds to wait for a connection to happen before closing and retrying
    sleep: 5 # Number of seconds to sleep between checks
    delay: 5 # Number of seconds to wait before starting to poll
    timeout: 300 # Maximum number of seconds to wait for
  when: restart.rc == 1

- name: Wait for the reboot to complete if there was a change.
  wait_for_connection:
    connect_timeout: 1 # Maximum number of seconds to wait for a connection to happen before closing and retrying
    sleep: 5 # Number of seconds to sleep between checks
    delay: 5 # Number of seconds to wait before starting to poll
    timeout: 300 # Maximum number of seconds to wait for
  when: restart.stat.exists == true